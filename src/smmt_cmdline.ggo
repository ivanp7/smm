package "semantic-machine-memory-tool"
version "0.1"
purpose "A tool to edit semantic machine memory at the lowest level -- filesystem directory tree."
versiontext "(C) Ivan Podmazov <podmazov@gmail.com>\nDistributed under the terms of the GPLv2 license"

args "--no-help --no-version"

usage "smmt ACTION [OPTIONS]..."

# description ""

#################################################################################

section "ACTIONS"

defgroup "ACTIONS" groupdesc="Supported actions (modes):" required

text "
"

groupoption "help" h "print help to standard output"
    group="ACTIONS"
groupoption "version" V "print version to standard output"
    group="ACTIONS"

text "
"

groupoption "new" - "create new object in filesystem (predicate, sentence, sentence argument, file, directory)"
    group="ACTIONS"
groupoption "copy" - "copy an object in filesystem"
    group="ACTIONS"
groupoption "move" - "move an object in filesystem"
    group="ACTIONS"
groupoption "delete" - "physically remove an object from filesystem"
    group="ACTIONS"

text "
"

groupoption "register" - "register entity UUID, so entity can be referenced by UUID"
    group="ACTIONS"
groupoption "register-name" - "register entity name, so entity name can be used as a synonym to entity UUID"
    group="ACTIONS"
groupoption "unregister" - "unregister entity UUID and name"
    group="ACTIONS"
groupoption "unregister-name" - "unregister entity name"
    group="ACTIONS"

text "
"

groupoption "path" - "print path to semantic machine memory root, subdirectory or object to standard output" 
    group="ACTIONS"

text "
"

groupoption "get" - "print an entity property value to standard output"
    group="ACTIONS"
groupoption "set" - "read value from stdin and assign it to an entity property"
    group="ACTIONS"

#################################################################################

section "COMMON OPTIONS"

# option <long> <short> "<desc>"
#          {details="<detailed description>"}
#          {argtype} {typestr="<type descr>"}
#          {values="<value1>","<value2>",...}
#          {default="<default value>"}
#          {dependon="<other option>"}
#          {required} {argoptional} {multiple}
#          {hidden}

# option <long> <short> "<desc>" flag <on/off>

# section "section name" {sectiondesc="optional section description"}

# text "a textual sentence"
#
#################################################################################

section "ACTION-SPECIFIC OPTIONS"

#################################################################################

defmode "path"

modeoption "target" - "target"
    mode="path" dependon="path"
    string typestr="TARGET"
    values="root","data","storage","predicate","p-data","p-parameters","p-storage",
        "sentence","s-data","s-arguments","s-predicate"
    default="root" optional multiple

modeoption "absolute" - "Output absolute path instead of relative to SMM root" 
    mode="path" dependon="path" flag off 

#################################################################################

section "Entity specification"

option "type" t "type of an entity"
    string typestr="TYPE" values="predicate","@","sentence","+"

option "predicate-path" p "path to a predicate in 'by-storage' directory"
    string typestr="PATH"

option "sentence-path" P "path to a sentence in 'by-storage' directory"
    string typestr="PATH"

option "predicate-uuid" i "UUID of a predicate"
    string typestr="UUID"
    dependon="type"

option "sentence-uuid" I "UUID of a sentence"
    string typestr="UUID"
    dependon="type"

option "name" n "name of an entity"
    string typestr="NAME"

#################################################################################

section "Entity property specification"

option "property" o "name of a property" string typestr="PROPERTY" values="type","uuid","name","description"

